{"version":3,"sources":["components/Header.js","utils/api.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","components/App.js","serviceWorker.js","index.js","image/logo.svg"],"names":["Header","className","src","logo","alt","api","baseUrl","headers","this","url","fetch","authorization","then","res","_getResponseData","name","about","method","body","JSON","stringify","avatar","link","cardId","ok","json","Promise","reject","Error","status","Card","props","card","onClick","onCardClick","type","likes","length","Main","onEditAvatar","onEditProfile","onAddPlace","React","useState","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","useEffect","all","getUserInfo","getInitialCards","values","userInfo","startCards","map","key","_id","Footer","PopupWithForm","isOpen","title","id","noValidate","children","onClose","ImagePopup","App","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","undefined","selectedCard","setSelectedCard","closeAllPopups","style","backgroundColor","placeholder","required","minLength","maxLength","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.f1e9a105.chunk.js","sourcesContent":["import React from 'react';\r\nimport logo from '../image/logo.svg';\r\n\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"header\">\r\n      <img className=\"header__logo\" src={logo} alt=\"Логотип\" />\r\n    </header >\r\n  )\r\n}\r\n\r\nexport default Header;","class Api {\r\n  constructor({ baseUrl, headers }) {\r\n    this.url = baseUrl;\r\n    this.headers = headers;\r\n  }\r\n\r\n  getInitialCards() {\r\n    return fetch(`${this.url}/cards`, {\r\n      headers: {\r\n        authorization: this.headers.authorization,\r\n      },\r\n    }).then((res) => this._getResponseData(res));\r\n  }\r\n\r\n  getUserInfo() {\r\n    return fetch(`${this.url}/users/me`, {\r\n      headers: {\r\n        authorization: this.headers.authorization,\r\n      },\r\n    }).then((res) => this._getResponseData(res));\r\n  }\r\n\r\n  setUserInfo(name, about) {\r\n    return fetch(`${this.url}/users/me`, {\r\n      method: \"PATCH\",\r\n      headers: this.headers,\r\n      body: JSON.stringify({\r\n        name: name,\r\n        about: about,\r\n      }),\r\n    }).then((res) => this._getResponseData(res));\r\n  }\r\n\r\n  setNewAvatar(avatar) {\r\n    return fetch(`${this.url}/users/me/avatar`, {\r\n      method: \"PATCH\",\r\n      headers: this.headers,\r\n      body: JSON.stringify({\r\n        avatar: avatar,\r\n      }),\r\n    }).then((res) => this._getResponseData(res));\r\n  }\r\n\r\n  postNewCard(name, link) {\r\n    return fetch(`${this.url}/cards`, {\r\n      method: \"POST\",\r\n      headers: this.headers,\r\n      body: JSON.stringify({\r\n        name: name,\r\n        link: link,\r\n      }),\r\n    }).then((res) => this._getResponseData(res));\r\n  };\r\n\r\n  deleteCard(cardId) {\r\n    return fetch(`${this.url}/cards/${cardId}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        authorization: this.headers.authorization,\r\n      },\r\n    }).then((res) => this._getResponseData(res));\r\n  };\r\n\r\n  setLike(cardId) {\r\n    return fetch(`${this.url}/cards/likes/${cardId}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        authorization: this.headers.authorization,\r\n      },\r\n    }).then((res) => this._getResponseData(res));\r\n  };\r\n\r\n  deleteLike(cardId) {\r\n    return fetch(`${this.url}/cards/likes/${cardId}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        authorization: this.headers.authorization,\r\n      },\r\n    }).then((res) => this._getResponseData(res));\r\n  };\r\n\r\n  _getResponseData(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(new Error(`Ошибка: ${res.status}`));\r\n  };\r\n}\r\n\r\nexport const api = new Api({\r\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-14',\r\n  headers: {\r\n    authorization: '834b1617-1b88-4942-8049-fea5a8e726ef',\r\n    'Content-Type': 'application/json'\r\n  }\r\n});","import React from 'react';\r\n\r\nfunction Card(props) {\r\n  function handleClick() {\r\n    props.onCardClick(props.card);\r\n  }\r\n\r\n  return (\r\n\r\n    <li className=\"element\">\r\n      <img className=\"element__image\" src={props.card.link} alt={props.card.name} onClick={handleClick} />\r\n      <button className=\"element__delete element__delete_hide\" />\r\n      <div className=\"element__info\">\r\n        <h2 className=\"element__title\">{props.card.name}</h2>\r\n        <div className=\"element__likes-container\">\r\n          <button type=\"button\" className=\"element__like\" />\r\n          <p className=\"element__likes\">{props.card.likes.length}</p>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport { api } from '../utils/api';\r\nimport Card from './Card';\r\n\r\nfunction Main({ onEditAvatar, onEditProfile, onAddPlace, onCardClick }) {\r\n  const [userName, setUserName] = React.useState();\r\n  const [userDescription, setUserDescription] = React.useState();\r\n  const [userAvatar, setUserAvatar] = React.useState();\r\n  const [cards, setCards] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    Promise.all([api.getUserInfo(), api.getInitialCards()])\r\n      .then((values) => {\r\n        const [userInfo, startCards] = values;\r\n        setUserName(userInfo.name);\r\n        setUserDescription(userInfo.about);\r\n        setUserAvatar(userInfo.avatar);\r\n        setCards(startCards);\r\n      })\r\n  }, []);\r\n\r\n  return (\r\n    <main className=\"content\">\r\n      {/* Профиль */}\r\n      <section className=\"profile\">\r\n        <div className=\"profile__img\">\r\n          <span className=\"profile__overlay\" onClick={onEditAvatar} />\r\n          <img className=\"profile__avatar\" src={userAvatar} alt=\"Аватар\" />\r\n        </div>\r\n        <div className=\"profile__info\">\r\n          <div className=\"profile__title-row\">\r\n            <h1 className=\"profile__name\">{userName}</h1>\r\n            <button className=\"profile__button-edit\" onClick={onEditProfile} />\r\n          </div>\r\n          <p className=\"profile__profession\">{userDescription}</p>\r\n        </div>\r\n        <button className=\"profile__button-add\" onClick={onAddPlace} />\r\n      </section>\r\n      {/* Места */}\r\n      <section className=\"elements\">\r\n        <ul className=\"elements__list\">\r\n\r\n          {cards.map((card) => {\r\n            return (\r\n              <Card card={card} onCardClick={onCardClick} key={card._id} />\r\n            )\r\n          })}\r\n\r\n        </ul>d\r\n      </section>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"footer\" >\r\n      <p className=\"footer__copyright\">© 2020 Mesto Russia</p>\r\n    </footer >\r\n\r\n  )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nfunction PopupWithForm(props) {\r\n\r\n  return (\r\n    <div className={`popup popup_type_${props.name} ${props.isOpen && `popup_opened`}`}>\r\n      <div className=\"popup__container\">\r\n        <h2 className=\"popup__title\">{props.title}</h2>\r\n        <form id={`form-${props.name}`} className=\"popup__form\" noValidate>\r\n          {props.children}\r\n          <button type=\"submit\" className=\"popup__button-save\">Сохранить</button>\r\n        </form>\r\n        <button className=\"popup__button-close\" onClick={props.onClose} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PopupWithForm","import React from 'react'\r\n\r\nfunction ImagePopup(props) {\r\n\r\n    return (\r\n      props.card\r\n        ? (\r\n          <div className={`popup popup_type_photo ${props.isOpen && `popup_opened`}`}>\r\n            <figure className=\"popup__content\">\r\n              <img className=\"popup__image\" src={props.card.link} alt=\"Фото места\" />\r\n              <figcaption className=\"popup__caption\">{props.card.name}</figcaption>\r\n              <button className=\"popup__button-close popup__button-close_for_img\" onClick={props.onClose} />\r\n            </figure>\r\n          </div>\r\n        )\r\n        : null\r\n    )\r\n}\r\n\r\nexport default ImagePopup","import React from 'react';\nimport Header from './Header'\nimport Main from './Main'\nimport Footer from './Footer'\nimport PopupWithForm from \"./PopupWithForm\";\nimport ImagePopup from \"./ImagePopup\";\n\n\nfunction App() {\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState(undefined);\n\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard('');\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  return (\n    <div style={{ backgroundColor: \"#000\" }}>\n      <div className=\"page\">\n        <Header />\n        <Main\n          onEditAvatar={handleEditAvatarClick}\n          onEditProfile={handleEditProfileClick}\n          onAddPlace={handleAddPlaceClick}\n          onCardClick={handleCardClick}\n        />\n        <Footer />\n\n        <PopupWithForm\n          name=\"avatar\"\n          title=\"Обновить аватар\"\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}>\n          <input\n            id=\"avatar-link\"\n            type=\"url\"\n            name=\"avatar\"\n            className=\"popup__input\"\n            placeholder=\"Ссылка на аватарку\"\n            required />\n\n          <span id=\"avatar-link-error\" className=\"popup__input_error\" />\n        </PopupWithForm>\n\n        <PopupWithForm\n          name=\"profile\"\n          title=\"Редактировать профиль\"\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}>\n          <input\n            id=\"profile-name\"\n            type=\"text\" name=\"name\"\n            className=\"popup__input\"\n            placeholder=\"Имя\"\n            required\n            minLength={2} maxLength={40} />\n\n          <span id=\"profile-name-error\" className=\"popup__input_error\" />\n\n          <input\n            id=\"profile-profession\"\n            type=\"text\" name=\"about\"\n            className=\"popup__input popup__input_compl\"\n            placeholder=\"О себе\"\n            required\n            minLength={2} maxLength={200} />\n\n          <span id=\"profile-profession-error\" className=\"popup__input_error\" />\n        </PopupWithForm>\n\n        <PopupWithForm\n          name=\"add-place\"\n          title=\"Новое место\"\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}>\n          <input\n            id=\"place-name\"\n            type=\"text\"\n            name=\"photoname\"\n            className=\"popup__input\"\n            placeholder=\"Название\"\n            required\n            minLength={2} maxLength={30} />\n\n          <span id=\"place-name-error\" className=\"popup__input_error\" />\n\n          <input\n            id=\"place-link\"\n            type=\"url\"\n            name=\"photolink\"\n            className=\"popup__input popup__input_compl\"\n            placeholder=\"Ссылка на картинку\"\n            required />\n\n          <span id=\"place-link-error\" className=\"popup__input_error\" />\n        </PopupWithForm>\n        <ImagePopup\n          card={selectedCard}\n          isOpen={selectedCard}\n          onClose={closeAllPopups}\n        />\n      </div>\n    </div >\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.855a8c98.svg\";"],"sourceRoot":""}