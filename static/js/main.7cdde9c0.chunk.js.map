{"version":3,"sources":["utils/api.js","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/ImagePopup.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/App.js","serviceWorker.js","index.js","image/logo.svg"],"names":["api","baseUrl","headers","this","url","fetch","authorization","then","res","_getResponseData","info","method","body","JSON","stringify","name","about","avatar","card","link","cardId","isLiked","ok","json","Promise","reject","Error","status","Header","className","src","logo","alt","CurrentUserContext","React","createContext","Card","props","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","likes","some","i","cardLikeButtonClassName","Provider","value","onClick","onCardClick","onCardDelete","type","onCardLike","length","Main","onEditAvatar","onEditProfile","onAddPlace","cards","map","key","Footer","ImagePopup","isOpen","onClose","PopupWithForm","title","id","noValidate","onSubmit","children","EditProfilePopup","useState","setName","description","setDescription","useEffect","evt","preventDefault","onUpdateUser","placeholder","required","minLength","maxLength","onChange","target","EditAvatarPopup","avatarRef","useRef","onUpdateAvatar","current","reset","ref","AddPlacePopup","setLink","App","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","undefined","selectedCard","setSelectedCard","setCurrentUser","setCards","closeAllPopups","all","getUserInfo","getInitialCards","values","catch","err","console","log","style","backgroundColor","changeLikeCardStatus","newCard","newCards","c","deleteCard","filter","setNewAvatar","setUserInfo","postNewCard","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.7cdde9c0.chunk.js","sourcesContent":["class Api {\r\n  constructor({ baseUrl, headers }) {\r\n    this.url = baseUrl;\r\n    this.headers = headers;\r\n  }\r\n\r\n  getInitialCards() {\r\n    return fetch(`${this.url}/cards`, {\r\n      headers: {\r\n        authorization: this.headers.authorization,\r\n      },\r\n    }).then((res) => this._getResponseData(res));\r\n  }\r\n\r\n  getUserInfo() {\r\n    return fetch(`${this.url}/users/me`, {\r\n      headers: {\r\n        authorization: this.headers.authorization,\r\n      },\r\n    }).then((res) => this._getResponseData(res));\r\n  }\r\n\r\n  setUserInfo(info) {\r\n    return fetch(`${this.url}/users/me`, {\r\n      method: \"PATCH\",\r\n      headers: this.headers,\r\n      body: JSON.stringify({\r\n        name: info.name,\r\n        about: info.about,\r\n      }),\r\n    })\r\n      .then((res) => this._getResponseData(res));\r\n  }\r\n\r\n  setNewAvatar(avatar) {\r\n    return fetch(`${this.url}/users/me/avatar`, {\r\n      method: \"PATCH\",\r\n      headers: this.headers,\r\n      body: JSON.stringify({\r\n        avatar: avatar,\r\n      }),\r\n    }).then((res) => this._getResponseData(res));\r\n  }\r\n\r\n  postNewCard(card) {\r\n    return fetch(`${this.url}/cards`, {\r\n      method: \"POST\",\r\n      headers: this.headers,\r\n      body: JSON.stringify({\r\n        name: card.name,\r\n        link: card.link,\r\n      }),\r\n    }).then((res) => this._getResponseData(res));\r\n  };\r\n\r\n  deleteCard(cardId) {\r\n    return fetch(`${this.url}/cards/${cardId}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        authorization: this.headers.authorization,\r\n      },\r\n    }).then((res) => this._getResponseData(res));\r\n  };\r\n\r\n  // setLike(cardId) {\r\n  //   return fetch(`${this.url}/cards/likes/${cardId}`, {\r\n  //     method: \"PUT\",\r\n  //     headers: {\r\n  //       authorization: this.headers.authorization,\r\n  //     },\r\n  //   }).then((res) => this._getResponseData(res));\r\n  // };\r\n\r\n  // deleteLike(cardId) {\r\n  //   return fetch(`${this.url}/cards/likes/${cardId}`, {\r\n  //     method: \"DELETE\",\r\n  //     headers: {\r\n  //       authorization: this.headers.authorization,\r\n  //     },\r\n  //   }).then((res) => this._getResponseData(res));\r\n  // };\r\n\r\n  changeLikeCardStatus(cardId, isLiked) {\r\n    return fetch(`${this.url}/cards/likes/${cardId}`, {\r\n      method: (isLiked ? \"PUT\" : \"DELETE\"),\r\n      headers: {\r\n        authorization: this.headers.authorization,\r\n      },\r\n    }).then((res) => this._getResponseData(res));\r\n  };\r\n\r\n\r\n  _getResponseData(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(new Error(`Ошибка: ${res.status}`));\r\n  };\r\n}\r\n\r\nexport const api = new Api({\r\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-14',\r\n  headers: {\r\n    authorization: '834b1617-1b88-4942-8049-fea5a8e726ef',\r\n    'Content-Type': 'application/json'\r\n  }\r\n});","import React from 'react';\r\nimport logo from '../image/logo.svg';\r\n\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"header\">\r\n      <img className=\"header__logo\" src={logo} alt=\"Логотип\" />\r\n    </header >\r\n  )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst CurrentUserContext = React.createContext();\r\n\r\nexport default CurrentUserContext;","import React from 'react';\r\nimport CurrentUserContext from './../contexts/CurrentUserContext';\r\n\r\n\r\nfunction Card(props) {\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n  const isOwn = props.card.owner._id === currentUser._id;\r\n  const cardDeleteButtonClassName = (\r\n    `element__delete ${isOwn ? '' : 'element__delete element__delete_hide'}`\r\n  );\r\n\r\n  const isLiked = props.card.likes.some(i => i._id === currentUser._id);\r\n  const cardLikeButtonClassName = (\r\n    `element__like ${isLiked ? 'elememt__like_active' : ''}`\r\n  );\r\n\r\n  function handleClick() { props.onCardClick(props.card); }\r\n\r\n  function handleLikeClick() { props.onCardLike(props.card); }\r\n\r\n  function handleDeleteCard() { props.onCardDelete(props.card); }\r\n\r\n  return (\r\n    <CurrentUserContext.Provider value={currentUser}>\r\n      <li className=\"element\">\r\n        <img\r\n          className=\"element__image\"\r\n          src={props.card.link}\r\n          alt={props.card.name}\r\n          onClick={handleClick}\r\n        />\r\n        <button\r\n          className={cardDeleteButtonClassName}\r\n          onClick={handleDeleteCard}\r\n        />\r\n        <div className=\"element__info\">\r\n          <h2 className=\"element__title\">{props.card.name}</h2>\r\n          <div className=\"element__likes-container\">\r\n            <button\r\n              type=\"button\"\r\n              className={cardLikeButtonClassName}\r\n              onClick={handleLikeClick}\r\n            />\r\n            <p className=\"element__likes\">{props.card.likes.length}</p>\r\n          </div>\r\n        </div>\r\n      </li>\r\n    </CurrentUserContext.Provider >\r\n  )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\n// import { api } from '../utils/api';\r\nimport Card from './Card';\r\nimport CurrentUserContext from './../contexts/CurrentUserContext';\r\n\r\nfunction Main({ onEditAvatar, onEditProfile, onAddPlace, onCardClick, cards, onCardLike, onCardDelete }) {\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  return (\r\n    <main className=\"content\">\r\n      {/* Профиль */}\r\n      <section className=\"profile\">\r\n        <div className=\"profile__img\">\r\n          <span className=\"profile__overlay\" onClick={onEditAvatar} />\r\n          <img className=\"profile__avatar\" src={currentUser.avatar} alt=\"Аватар\" />\r\n        </div>\r\n        <div className=\"profile__info\">\r\n          <div className=\"profile__title-row\">\r\n            <h1 className=\"profile__name\">{currentUser.name}</h1>\r\n            <button className=\"profile__button-edit\" onClick={onEditProfile} />\r\n          </div>\r\n          <p className=\"profile__profession\">{currentUser.about}</p>\r\n        </div>\r\n        <button className=\"profile__button-add\" onClick={onAddPlace} />\r\n      </section>\r\n      {/* Места */}\r\n      <section className=\"elements\">\r\n        <ul className=\"elements__list\">\r\n\r\n          {cards.map((card) => {\r\n            return (\r\n              <Card\r\n                card={card}\r\n                onCardClick={onCardClick}\r\n                key={card._id}\r\n                onCardLike={onCardLike}\r\n                onCardDelete={onCardDelete}\r\n              />\r\n            )\r\n          })}\r\n\r\n        </ul>\r\n      </section>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"footer\" >\r\n      <p className=\"footer__copyright\">© 2020 Mesto Russia</p>\r\n    </footer >\r\n\r\n  )\r\n}\r\n\r\nexport default Footer;","import React from 'react'\r\n\r\nfunction ImagePopup(props) {\r\n\r\n    return (\r\n      props.card\r\n        ? (\r\n          <div className={`popup popup_type_photo ${props.isOpen && `popup_opened`}`}>\r\n            <figure className=\"popup__content\">\r\n              <img className=\"popup__image\" src={props.card.link} alt=\"Фото места\" />\r\n              <figcaption className=\"popup__caption\">{props.card.name}</figcaption>\r\n              <button className=\"popup__button-close popup__button-close_for_img\" onClick={props.onClose} />\r\n            </figure>\r\n          </div>\r\n        )\r\n        : null\r\n    )\r\n}\r\n\r\nexport default ImagePopup","import React from 'react';\r\n\r\n\r\nfunction PopupWithForm(props) {\r\n\r\n  return (\r\n    <div className={`popup popup_type_${props.name} ${props.isOpen && `popup_opened`}`}>\r\n      <div className=\"popup__container\">\r\n        <h2 className=\"popup__title\">{props.title}</h2>\r\n        <form\r\n          id={`form-${props.name}`}\r\n          className=\"popup__form\"\r\n          noValidate\r\n          onSubmit={props.onSubmit}\r\n        >\r\n          {props.children}\r\n          <button\r\n            type=\"submit\"\r\n            className=\"popup__button-save\"\r\n          >Сохранить</button>\r\n        </form>\r\n        <button\r\n          className=\"popup__button-close\"\r\n          onClick={props.onClose}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PopupWithForm","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport CurrentUserContext from './../contexts/CurrentUserContext';\r\n\r\nfunction EditProfilePopup(props) {\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n  const [name, setName] = React.useState('');\r\n  const [description, setDescription] = React.useState('');\r\n\r\n  React.useEffect(() => {\r\n    setName(currentUser.name);\r\n    setDescription(currentUser.about);\r\n  }, [currentUser])\r\n\r\n  function handleNameChange(evt) {\r\n    setName(evt.target.value);\r\n  }\r\n\r\n  function handlDescriptionChange(evt) {\r\n    setDescription(evt.target.value);\r\n  }\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    props.onUpdateUser({\r\n      name,\r\n      about: description,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      name=\"profile\"\r\n      title=\"Редактировать профиль\"\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <input\r\n        id=\"profile-name\"\r\n        type=\"text\"\r\n        name=\"name\"\r\n        className=\"popup__input\"\r\n        placeholder=\"Имя\"\r\n        required\r\n        minLength={2}\r\n        maxLength={40}\r\n        value={name || ''}\r\n        onChange={handleNameChange}\r\n      />\r\n\r\n      <span id=\"profile-name-error\" className=\"popup__input_error\" />\r\n\r\n      <input\r\n        id=\"profile-profession\"\r\n        type=\"text\"\r\n        name=\"about\"\r\n        className=\"popup__input popup__input_compl\"\r\n        placeholder=\"О себе\"\r\n        required\r\n        minLength={2}\r\n        maxLength={200}\r\n        value={description || ''}\r\n        onChange={handlDescriptionChange}\r\n      />\r\n\r\n      <span id=\"profile-profession-error\" className=\"popup__input_error\" />\r\n    </PopupWithForm>\r\n  )\r\n}\r\n\r\nexport default EditProfilePopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction EditAvatarPopup(props) {\r\n  const avatarRef = React.useRef();\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    props.onUpdateAvatar(avatarRef.current.value);\r\n    evt.target.reset();\r\n  };\r\n\r\n  return (\r\n    <PopupWithForm\r\n      name=\"avatar\"\r\n      title=\"Обновить аватар\"\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <input\r\n        id=\"avatar-link\"\r\n        type=\"url\"\r\n        name=\"avatar\"\r\n        className=\"popup__input\"\r\n        placeholder=\"Ссылка на аватарку\"\r\n        required\r\n        ref={avatarRef}\r\n      />\r\n      <span id=\"avatar-link-error\" className=\"popup__input_error\" />\r\n    </PopupWithForm>\r\n  )\r\n}\r\n\r\nexport default EditAvatarPopup;","import React from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\nfunction AddPlacePopup(props) {\r\n  const [name, setName] = React.useState(\"\");\r\n  const [link, setLink] = React.useState(\"\");\r\n\r\n  const handleNameChange = (evt) => {\r\n    setName(evt.target.value);\r\n  };\r\n  const handleLinkChange = (evt) => {\r\n    setLink(evt.target.value);\r\n  };\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    props.onAddPlace({\r\n      name: name,\r\n      link: link,\r\n    });\r\n    setName('');\r\n    setLink('');\r\n  };\r\n\r\n  return (\r\n    <PopupWithForm\r\n      name=\"add-place\"\r\n      title=\"Новое место\"\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <input\r\n        id=\"place-name\"\r\n        type=\"text\"\r\n        name=\"photoname\"\r\n        className=\"popup__input\"\r\n        placeholder=\"Название\"\r\n        required\r\n        minLength={2} maxLength={30}\r\n        value={name}\r\n        onChange={handleNameChange}\r\n      />\r\n      <span id=\"place-name-error\" className=\"popup__input_error\" />\r\n      <input\r\n        id=\"place-link\"\r\n        type=\"url\"\r\n        name=\"photolink\"\r\n        className=\"popup__input popup__input_compl\"\r\n        placeholder=\"Ссылка на картинку\"\r\n        required\r\n        value={link}\r\n        onChange={handleLinkChange}\r\n      />\r\n      <span id=\"place-link-error\" className=\"popup__input_error\" />\r\n    </PopupWithForm>\r\n\r\n  );\r\n}\r\nexport default AddPlacePopup;","import React from 'react';\r\nimport { api } from '../utils/api';\r\nimport Header from './Header'\r\nimport Main from './Main'\r\nimport Footer from './Footer'\r\nimport ImagePopup from './ImagePopup';\r\nimport CurrentUserContext from './../contexts/CurrentUserContext';\r\nimport EditProfilePopup from './EditProfilePopup';\r\nimport EditAvatarPopup from './EditAvatarPopup';\r\nimport AddPlacePopup from './AddPlacePopup';\r\n\r\n\r\n\r\nfunction App() {\r\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\r\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\r\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\r\n  const [selectedCard, setSelectedCard] = React.useState(undefined);\r\n  const [currentUser, setCurrentUser] = React.useState({});\r\n  const [cards, setCards] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    Promise.all([api.getUserInfo(), api.getInitialCards()])\r\n      .then(([values, card]) => {\r\n        setCurrentUser(values);\r\n        setCards(card);\r\n      })\r\n      .catch((err) => {\r\n        console.log(`Данные не получены. ${err}`);\r\n      })\r\n  }, []);\r\n\r\n\r\n  function handleCardLike(card) {\r\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n    api\r\n      .changeLikeCardStatus(card._id, !isLiked)\r\n      .then((newCard) => {\r\n        const newCards = cards.map((c) => c._id === card._id ? newCard : c);\r\n        setCards(newCards);\r\n      })\r\n      .catch((err) => {\r\n        console.log(`Ошибка лайка. ${err}`);\r\n      });\r\n  }\r\n\r\n  function handleCardDelete(card) {\r\n    api\r\n      .deleteCard(card._id)\r\n      .then(() => {\r\n        const newCards = cards.filter((c) => c._id !== card._id);\r\n        setCards(newCards);\r\n      })\r\n      .catch((err) => {\r\n        console.log(`Ошибка удаления карточки. ${err}`);\r\n      });\r\n  }\r\n\r\n\r\n  function handleEditAvatarClick() {\r\n    setIsEditAvatarPopupOpen(true);\r\n  }\r\n\r\n  function handleEditProfileClick() {\r\n    setIsEditProfilePopupOpen(true);\r\n  }\r\n\r\n  function handleAddPlaceClick() {\r\n    setIsAddPlacePopupOpen(true);\r\n  }\r\n\r\n  function closeAllPopups() {\r\n    setIsEditAvatarPopupOpen(false);\r\n    setIsEditProfilePopupOpen(false);\r\n    setIsAddPlacePopupOpen(false);\r\n    setSelectedCard('');\r\n  }\r\n\r\n  function handleCardClick(card) {\r\n    setSelectedCard(card);\r\n  }\r\n\r\n  function handleUpdateUser(info) {\r\n    api\r\n      .setUserInfo(info)\r\n      .then((res) => {\r\n        setCurrentUser(res);\r\n        closeAllPopups();\r\n      })\r\n      .catch((err) => {\r\n        console.log(`Ошибка обновления данных пользователя. ${err}`);\r\n      })\r\n  }\r\n\r\n  function handleUpdateAvatar(avatar) {\r\n    api\r\n      .setNewAvatar(avatar)\r\n      .then((res) => {\r\n        setCurrentUser(res);\r\n        closeAllPopups();\r\n      })\r\n      .catch((err) => {\r\n        console.log(`Ошибка обновления аватара. ${err}`);\r\n      })\r\n  }\r\n\r\n  function handleAddPlaceSubmit(card) {\r\n    api\r\n      .postNewCard(card)\r\n      .then((res) => {\r\n        const newCard = res;\r\n        setCards([newCard, ...cards]);\r\n        closeAllPopups();\r\n      })\r\n      .catch((err) => {\r\n        console.log(`Ошибка добавления карточки. ${err}`);\r\n      })\r\n  }\r\n\r\n  return (\r\n    <CurrentUserContext.Provider value={currentUser}>\r\n      <div style={{ backgroundColor: \"#000\" }}>\r\n        <div className=\"page\">\r\n          <Header />\r\n          <Main\r\n            onEditAvatar={handleEditAvatarClick}\r\n            onEditProfile={handleEditProfileClick}\r\n            onAddPlace={handleAddPlaceClick}\r\n            onCardClick={handleCardClick}\r\n            cards={cards}\r\n            onCardLike={handleCardLike}\r\n            onCardDelete={handleCardDelete}\r\n          />\r\n          <Footer />\r\n\r\n          <EditAvatarPopup\r\n            isOpen={isEditAvatarPopupOpen}\r\n            onClose={closeAllPopups}\r\n            onUpdateAvatar={handleUpdateAvatar}\r\n          />\r\n\r\n          <EditProfilePopup\r\n            isOpen={isEditProfilePopupOpen}\r\n            onClose={closeAllPopups}\r\n            onUpdateUser={handleUpdateUser}\r\n          />\r\n\r\n          <AddPlacePopup\r\n            isOpen={isAddPlacePopupOpen}\r\n            onClose={closeAllPopups}\r\n            onAddPlace={handleAddPlaceSubmit}\r\n          />\r\n\r\n          <ImagePopup\r\n            card={selectedCard}\r\n            isOpen={selectedCard}\r\n            onClose={closeAllPopups}\r\n          />\r\n\r\n        </div>\r\n      </div >\r\n    </CurrentUserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.855a8c98.svg\";"],"sourceRoot":""}